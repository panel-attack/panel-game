-- this file documents presets for level data
local LevelData = require("common.data.LevelData")

---@type LevelData[]
local modern = {}
modern[1] = LevelData()
modern[1] :setStartingSpeed(1)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.TIME_INTERVAL)
          :setShockFrequency(12)
          :setShockCap(21)
          :setColorCount(5)
          :setMaxHealth(121)
          :setStopFormula(LevelData.STOP_FORMULAS.MODERN)
          :setStopComboConstant(-20)
          :setStopChainConstant(80)
          :setStopDangerConstant(160)
          :setStopCoefficient(20)
          :setStopDangerCoefficient(20)
          :setHover(12)
          :setGarbageHover(41)
          :setFlash(44)
          :setFace(20)
          :setPop(9)

modern[2] = LevelData()
modern[2] :setStartingSpeed(5)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.TIME_INTERVAL)
          :setShockFrequency(14)
          :setShockCap(18)
          :setColorCount(5)
          :setMaxHealth(101)
          :setStopFormula(LevelData.STOP_FORMULAS.MODERN)
          :setStopComboConstant(-16)
          :setStopChainConstant(77)
          :setStopDangerConstant(152)
          :setStopCoefficient(18)
          :setStopDangerCoefficient(18)
          :setHover(12)
          :setGarbageHover(36)
          :setFlash(44)
          :setFace(18)
          :setPop(9)

modern[3] = LevelData()
modern[3] :setStartingSpeed(9)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.TIME_INTERVAL)
          :setShockFrequency(16)
          :setShockCap(18)
          :setColorCount(5)
          :setMaxHealth(81)
          :setStopFormula(LevelData.STOP_FORMULAS.MODERN)
          :setStopComboConstant(-12)
          :setStopChainConstant(74)
          :setStopDangerConstant(144)
          :setStopCoefficient(16)
          :setStopDangerCoefficient(16)
          :setHover(11)
          :setGarbageHover(31)
          :setFlash(42)
          :setFace(17)
          :setPop(8)

modern[4] = LevelData()
modern[4] :setStartingSpeed(13)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.TIME_INTERVAL)
          :setShockFrequency(19)
          :setShockCap(15)
          :setColorCount(5)
          :setMaxHealth(66)
          :setStopFormula(LevelData.STOP_FORMULAS.MODERN)
          :setStopComboConstant(-8)
          :setStopChainConstant(71)
          :setStopDangerConstant(136)
          :setStopCoefficient(14)
          :setStopDangerCoefficient(14)
          :setHover(10)
          :setGarbageHover(26)
          :setFlash(42)
          :setFace(16)
          :setPop(8)


modern[5] = LevelData()
modern[5] :setStartingSpeed(17)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.TIME_INTERVAL)
          :setShockFrequency(23)
          :setShockCap(15)
          :setColorCount(5)
          :setMaxHealth(51)
          :setStopFormula(LevelData.STOP_FORMULAS.MODERN)
          :setStopComboConstant(-3)
          :setStopChainConstant(68)
          :setStopDangerConstant(128)
          :setStopCoefficient(12)
          :setStopDangerCoefficient(12)
          :setHover(9)
          :setGarbageHover(21)
          :setFlash(38)
          :setFace(15)
          :setPop(8)

modern[6] = LevelData()
modern[6] :setStartingSpeed(21)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.TIME_INTERVAL)
          :setShockFrequency(26)
          :setShockCap(12)
          :setColorCount(5)
          :setMaxHealth(41)
          :setStopFormula(LevelData.STOP_FORMULAS.MODERN)
          :setStopComboConstant(2)
          :setStopChainConstant(65)
          :setStopDangerConstant(120)
          :setStopCoefficient(10)
          :setStopDangerCoefficient(10)
          :setHover(6)
          :setGarbageHover(16)
          :setFlash(36)
          :setFace(14)
          :setPop(8)


modern[7] = LevelData()
modern[7] :setStartingSpeed(25)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.TIME_INTERVAL)
          :setShockFrequency(29)
          :setShockCap(9)
          :setColorCount(5)
          :setMaxHealth(31)
          :setStopFormula(LevelData.STOP_FORMULAS.MODERN)
          :setStopComboConstant(7)
          :setStopChainConstant(62)
          :setStopDangerConstant(112)
          :setStopCoefficient(8)
          :setStopDangerCoefficient(8)
          :setHover(5)
          :setGarbageHover(13)
          :setFlash(34)
          :setFace(13)
          :setPop(8)

modern[8] = LevelData()
modern[8] :setStartingSpeed(29)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.TIME_INTERVAL)
          :setShockFrequency(33)
          :setShockCap(6)
          :setColorCount(5)
          :setMaxHealth(21)
          :setStopFormula(LevelData.STOP_FORMULAS.MODERN)
          :setStopComboConstant(12)
          :setStopChainConstant(60)
          :setStopDangerConstant(104)
          :setStopCoefficient(6)
          :setStopDangerCoefficient(6)
          :setHover(4)
          :setGarbageHover(10)
          :setFlash(32)
          :setFace(12)
          :setPop(7)

modern[9] = LevelData()
modern[9] :setStartingSpeed(27)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.TIME_INTERVAL)
          :setShockFrequency(37)
          :setShockCap(6)
          :setColorCount(6)
          :setMaxHealth(11)
          :setStopFormula(LevelData.STOP_FORMULAS.MODERN)
          :setStopComboConstant(17)
          :setStopChainConstant(58)
          :setStopDangerConstant(96)
          :setStopCoefficient(4)
          :setStopDangerCoefficient(4)
          :setHover(6)
          :setGarbageHover(7)
          :setFlash(30)
          :setFace(11)
          :setPop(7)

modern[10] = LevelData()
modern[10]:setStartingSpeed(32)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.TIME_INTERVAL)
          :setShockFrequency(41)
          :setShockCap(3)
          :setColorCount(6)
          :setMaxHealth(1)
          :setStopFormula(LevelData.STOP_FORMULAS.MODERN)
          :setStopComboConstant(22)
          :setStopChainConstant(56)
          :setStopDangerConstant(88)
          :setStopCoefficient(2)
          :setStopDangerCoefficient(2)
          :setHover(6)
          :setGarbageHover(4)
          :setFlash(28)
          :setFace(10)
          :setPop(7)

modern[11] = LevelData()
modern[11]:setStartingSpeed(45)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.TIME_INTERVAL)
          :setShockFrequency(18)
          :setShockCap(3)
          :setColorCount(6)
          :setMaxHealth(1)
          :setStopFormula(LevelData.STOP_FORMULAS.MODERN)
          :setStopComboConstant(27)
          :setStopChainConstant(53)
          :setStopDangerConstant(80)
          :setStopCoefficient(1)
          :setStopDangerCoefficient(0)
          :setHover(3)
          :setGarbageHover(3)
          :setFlash(22)
          :setFace(8)
          :setPop(6)

---@type (table<number | string, LevelData>)
local classic = {}
classic[1] = LevelData()
classic[1]:setStartingSpeed(1)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.CLEARED_PANEL_COUNT)
          :setShockCap(0)
          -- game prep code and replay loading code needs to check for game mode and override
          -- endless has only 5 colors on the lowest classic difficulty
          :setColorCount(6)
          :setMaxHealth(1)
          :setStopFormula(LevelData.STOP_FORMULAS.CLASSIC)
          :setStopComboConstant(120)
          :setStopChainConstant(300)
          :setStopDangerConstant(600)
          :setStopCoefficient(0)
          :setStopDangerCoefficient(0)
          :setHover(12)
          :setFlash(44)
          :setFace(17)
          :setPop(9)
classic.easy = classic[1]

classic[2] = LevelData()
classic[2]:setStartingSpeed(1)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.CLEARED_PANEL_COUNT)
          :setShockCap(0)
          :setColorCount(6)
          :setMaxHealth(1)
          :setStopFormula(LevelData.STOP_FORMULAS.CLASSIC)
          :setStopComboConstant(120)
          :setStopChainConstant(180)
          :setStopDangerConstant(420)
          :setStopCoefficient(0)
          :setStopDangerCoefficient(0)
          :setHover(9)
          :setFlash(36)
          :setFace(13)
          :setPop(8)
classic.normal = classic[2]

classic[3] = LevelData()
classic[3]:setStartingSpeed(1)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.CLEARED_PANEL_COUNT)
          :setShockCap(0)
          :setColorCount(6)
          :setMaxHealth(1)
          :setStopFormula(LevelData.STOP_FORMULAS.CLASSIC)
          :setStopComboConstant(120)
          :setStopChainConstant(120)
          :setStopDangerConstant(240)
          :setStopCoefficient(0)
          :setStopDangerCoefficient(0)
          :setHover(6)
          :setFlash(22)
          :setFace(15)
          :setPop(7)
classic.hard = classic[3]

classic[4] = LevelData()
classic[4]:setStartingSpeed(1)
          :setSpeedIncreaseMode(LevelData.SPEED_INCREASE_MODES.CLEARED_PANEL_COUNT)
          :setShockCap(0)
          :setColorCount(6)
          :setMaxHealth(1)
          :setStopFormula(LevelData.STOP_FORMULAS.CLASSIC)
          :setStopComboConstant(90)
          :setStopChainConstant(90)
          :setStopDangerConstant(180)
          :setStopCoefficient(0)
          :setStopDangerCoefficient(0)
          :setHover(3)
          :setFlash(16)
          :setFace(10)
          :setPop(6)
classic.ex = classic[4]

local LevelPresets = {}

---@param level number
---@return LevelData # a deepcopy of the modern preset
function LevelPresets.getModern(level)
  assert(modern[level], "trying to load inexistent level preset" .. level)
  return deepcpy(modern[level])
end

LevelPresets.modernPresetCount = #modern

---@param difficulty number | string the difficulty expressed as index 1 2 3 4 or easy normal hard ex 
---@return LevelData # a deepcopy of the classic preset
function LevelPresets.getClassic(difficulty)
  assert(classic[difficulty], "trying to load inexistent difficulty preset" .. difficulty)
  return deepcpy(classic[difficulty])
end

LevelPresets.classicPresetCount = #classic

return LevelPresets